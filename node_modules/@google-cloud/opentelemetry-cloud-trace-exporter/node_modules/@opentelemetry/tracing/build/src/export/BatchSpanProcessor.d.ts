/*!
 * Copyright 2019, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Span } from '../Span';
import { SpanProcessor } from '../SpanProcessor';
import { BufferConfig } from '../types';
import { SpanExporter } from './SpanExporter';
/**
 * Implementation of the {@link SpanProcessor} that batches spans exported by
 * the SDK then pushes them to the exporter pipeline.
 */
export declare class BatchSpanProcessor implements SpanProcessor {
    private readonly _exporter;
    private readonly _bufferSize;
    private readonly _bufferTimeout;
    private _finishedSpans;
    private _timer;
    private _isShutdown;
    constructor(_exporter: SpanExporter, config?: BufferConfig);
    forceFlush(): void;
    onStart(span: Span): void;
    onEnd(span: Span): void;
    shutdown(): void;
    /** Add a span in the buffer. */
    private _addToBuffer;
    /** Send the span data list to exporter */
    private _flush;
    private _maybeStartTimer;
    private _clearTimer;
}
