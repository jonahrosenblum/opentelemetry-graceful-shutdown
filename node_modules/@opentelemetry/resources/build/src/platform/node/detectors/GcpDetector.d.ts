/*!
 * Copyright 2020, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Resource } from '../../../Resource';
import { Detector } from '../../../types';
/**
 * The GcpDetector can be used to detect if a process is running in the Google
 * Cloud Platofrm and return a {@link Resource} populated with metadata about
 * the instance. Returns an empty Resource if detection fails.
 */
declare class GcpDetector implements Detector {
    detect(): Promise<Resource>;
    /** Add resource labels for K8s */
    private _addK8sLabels;
    /** Gets project id from GCP project metadata. */
    private _getProjectId;
    /** Gets instance id from GCP instance metadata. */
    private _getInstanceId;
    /** Gets zone from GCP instance metadata. */
    private _getZone;
    /** Gets cluster name from GCP instance metadata. */
    private _getClusterName;
}
export declare const gcpDetector: GcpDetector;
export {};
